// Generated by data binding compiler. Do not edit!
package com.guglielmoboi.cstimergraph.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.guglielmoboi.cstimergraph.R;
import com.guglielmoboi.cstimergraph.fragments.settings.SettingsViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentSettingsBinding extends ViewDataBinding {
  @NonNull
  public final TextView darkThemeHeader;

  @NonNull
  public final ImageView darkThemeIcon;

  @NonNull
  public final SwitchMaterial darkThemeSwitch;

  @NonNull
  public final View divider11;

  @NonNull
  public final View divider4;

  @NonNull
  public final View divider5;

  @NonNull
  public final View divider6;

  @NonNull
  public final ImageView homeIcon;

  @NonNull
  public final TextView launchScreenHeader;

  @NonNull
  public final Spinner launchScreenSpinner;

  @NonNull
  public final TextView settingsHeader;

  @Bindable
  protected SettingsViewModel mViewModel;

  protected FragmentSettingsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView darkThemeHeader, ImageView darkThemeIcon, SwitchMaterial darkThemeSwitch,
      View divider11, View divider4, View divider5, View divider6, ImageView homeIcon,
      TextView launchScreenHeader, Spinner launchScreenSpinner, TextView settingsHeader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.darkThemeHeader = darkThemeHeader;
    this.darkThemeIcon = darkThemeIcon;
    this.darkThemeSwitch = darkThemeSwitch;
    this.divider11 = divider11;
    this.divider4 = divider4;
    this.divider5 = divider5;
    this.divider6 = divider6;
    this.homeIcon = homeIcon;
    this.launchScreenHeader = launchScreenHeader;
    this.launchScreenSpinner = launchScreenSpinner;
    this.settingsHeader = settingsHeader;
  }

  public abstract void setViewModel(@Nullable SettingsViewModel viewModel);

  @Nullable
  public SettingsViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_settings, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingsBinding>inflateInternal(inflater, R.layout.fragment_settings, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_settings, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingsBinding>inflateInternal(inflater, R.layout.fragment_settings, null, false, component);
  }

  public static FragmentSettingsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentSettingsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentSettingsBinding)bind(component, view, R.layout.fragment_settings);
  }
}
